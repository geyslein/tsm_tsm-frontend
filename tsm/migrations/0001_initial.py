# Generated by Django 4.0.7 on 2022-09-09 06:40

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MqttDeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('thing_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('datasource_type', models.CharField(choices=[('SFTP', 'SFTP'), ('MQTT', 'MQTT')], default='SFTP', max_length=4)),
                ('group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Thing',
                'verbose_name_plural': 'Things',
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('url', models.CharField(max_length=1000)),
                ('username', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('thing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tsm.thing')),
            ],
        ),
        migrations.CreateModel(
            name='RawDataStorage',
            fields=[
                ('bucket', models.CharField(max_length=1000)),
                ('access_key', models.CharField(max_length=200)),
                ('secret_key', models.CharField(max_length=200)),
                ('thing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tsm.thing')),
            ],
        ),
        migrations.CreateModel(
            name='SftpConfig',
            fields=[
                ('uri', models.CharField(max_length=1000)),
                ('username', models.CharField(max_length=1000)),
                ('password', models.CharField(max_length=1000)),
                ('filename_pattern', models.CharField(max_length=200)),
                ('thing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tsm.thing')),
            ],
        ),
        migrations.CreateModel(
            name='Parser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parser_type', models.CharField(choices=[('CSV', 'CSV')], default='CSV', max_length=100)),
                ('delimiter', models.CharField(max_length=1)),
                ('exclude_headlines', models.IntegerField(default=0)),
                ('time_column', models.IntegerField()),
                ('timestamp_expression', models.CharField(max_length=200)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('sftp_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsm.sftpconfig')),
            ],
        ),
        migrations.CreateModel(
            name='MqttConfig',
            fields=[
                ('uri', models.CharField(max_length=1000)),
                ('username', models.CharField(max_length=1000)),
                ('password', models.CharField(max_length=1000)),
                ('topic', models.CharField(max_length=1000)),
                ('thing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tsm.thing')),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsm.mqttdevicetype')),
            ],
        ),
    ]
